// Mocks generated by Mockito 5.0.16 from annotations
// in stream_loader/test/loader_widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: unnecessary_overrides

import 'package:flutter/material.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:stream_loader/src/loader_bloc.dart' as _i2;
import 'package:stream_loader/src/loader_state.dart' as _i5;

import 'loader_widget_test.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeLoaderBloc_0<Content extends Object> extends _i1.Fake
    implements _i2.LoaderBloc<Content> {}

class _FakeWidget_1 extends _i1.Fake implements _i3.Widget {
  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [BlocProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockBlocProvider<T extends Object> extends _i1.Mock
    implements _i4.BlocProvider<T> {
  MockBlocProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LoaderBloc<T> call() => (super.noSuchMethod(Invocation.method(#call, []),
      returnValue: _FakeLoaderBloc_0<T>()) as _i2.LoaderBloc<T>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [LoaderBuilder].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoaderBuilder<T extends Object> extends _i1.Mock
    implements _i4.LoaderBuilder<T> {
  MockLoaderBuilder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Widget call(_i3.BuildContext? context, _i5.LoaderState<T>? state,
          _i2.LoaderBloc<T>? bloc) =>
      (super.noSuchMethod(Invocation.method(#call, [context, state, bloc]),
          returnValue: _FakeWidget_1()) as _i3.Widget);
  @override
  String toString() => super.toString();
}
